import pandas as pd

from statsbombpy import sb

import mplsoccer
from mplsoccer import Pitch

import matplotlib
import matplotlib.pyplot as plt

import json
from pandas import json_normalize

sb.competitions()

sb.matches(competition_id=43, season_id=106).head(50)

MATCH_ID = 3869354
match_events_df = sb.events(match_id=MATCH_ID)
match_360_df = pd.read_json(f'/Users/Hp Laptop/Documents/GitHub/open-data/data/three-sixty/{MATCH_ID}.json')
#note link to GITHUB JSON

df= pd.merge(left=match_events_df, right =match_360_df, left_on='id', right_on='event_uuid', how='left')

print(df.columns)

#identifying players and player ids
print(df.player_id.unique())
print(df.player.unique())

Jude_Bellingham = 30714

df = df[df['player_id'] == Jude_Bellingham].reset_index(drop=True)
data = df.to_json(orient='index')

# Use json.loads() to load the JSON string
data_dict = json.loads(data)

# Use pandas.DataFrame.from_dict() to convert the dictionary to DataFrame
df2 = pd.DataFrame.from_dict(data_dict, orient='index')

# Save the DataFrame to a CSV file
#df2.to_csv('C:/xxxxxxxxxxxxx/JBWC2022.csv', index=False)

print("Data saved to player_data.csv")

#load csv file - change file path to own device
df1= pd.read_csv('C:/xxxxxxxxxxxxxxxxxx/JBWC2022.csv')

dfJB = df1[(df1['player'] == 'Jude Bellingham')]

#setting pitch
customcmap = matplotlib.colors.LinearSegmentedColormap.from_list('custom cmap', ['white', 'orange', 'red'])

pitch = mplsoccer.VerticalPitch(pitch_type='statsbomb', pitch_color='white', line_color='black', line_zorder=2)
fig, ax = pitch.draw(figsize=(8, 12))
fig.set_facecolor('white')

pitch.kdeplot(dfJB['location_x'], dfJB['location_y'], ax=ax, cmap=customcmap, fill=True, n_levels=100, zorder=1)

#change file path to own device
#fig.savefig('C:/xxxxxxxxxxxxxxxxxxx/JBHMWC2022.png')
